{"version":3,"sources":["Component/NavbarComponent.jsx","Component/keyboard/keys/Key.jsx","Component/keyboard/keys/DoubleCharKey.jsx","Component/icons/IconArrowLeft.jsx","Component/keyboard/keys/IconKey.jsx","Component/keyboard/keys/BackSpace.jsx","Component/keyboard/FirstRow.jsx","Component/keyboard/keys/LetterKey.jsx","Component/icons/IconRepeat.jsx","Component/keyboard/keys/TabKey.jsx","Component/keyboard/SecondRow.jsx","Component/keyboard/keys/StickyKey.jsx","Component/icons/IconEnter.jsx","Component/keyboard/keys/EnterKey.jsx","Component/keyboard/ThirdRow.jsx","Component/icons/IconArrowUp.jsx","Component/keyboard/keys/ShiftKey.jsx","Component/keyboard/FourthRow.jsx","Component/keyboard/keys/SingleCharKey.jsx","Component/icons/IconWindows.jsx","Component/keyboard/keys/WinLogoKey.jsx","Component/keyboard/keys/CtrKey.jsx","Component/keyboard/keys/AltKey.jsx","Component/icons/IconBars.jsx","Component/keyboard/keys/CommandKey.jsx","Component/keyboard/FifthRow.jsx","Component/keyboard/KeyboardComonent.jsx","Component/redux/actions/keyboardActions.js","Component/redux/actions/courseActions.js","Component/redux/actions/summaryActions.js","Component/TypingComponent/KeyDrillComponent.js","Component/TypingComponent/TypingComponent.js","Component/Dashboard.jsx","Component/icons/IconXCircle.jsx","Component/icons/IconCheckCircle.jsx","Component/Timer.jsx","Component/CharacterSelector.jsx","Component/SummaryComponent.jsx","courses/Keyboard.js","courses/BaseDrill.js","courses/WordDrill.js","courses/TextDrill.js","courses/KeyDrill.js","courses/Course.js","courses/Summary.js","Component/redux/rootReducer.js","Component/redux/reducers/keyboardReducer.js","Component/redux/reducers/CoursesReducer.js","Component/redux/reducers/summaryReducer.js","store.js","sounds/keyStroke.wav","sounds/tink.wav","sounds/ride.wav","sounds/Sounds.js","App.js","registerServiceWorker.js","index.js"],"names":["NavbarComponent","className","href","connect","keyboard","courses","currentKey","get","sticky","capsOn","failed","props","render","console","log","classes","extraClass","push","value","shifted","char","join","getClasses","DoubleCharKey","state","IconArrowLeft","xmlns","viewBox","width","height","d","IconKey","icon","BackSpace","FirstRow","LetterKey","IconRepeat","TabKey","SecondRow","StickyKey","IconEnter","version","points","EnterKey","ThirdRow","IconArrowUp","ShiftKey","FourthRow","SingleCharKey","IconWindows","WinLogoKey","CtrKey","AltKey","IconBars","CommandKey","FifthRow","dispatch","keyDown","e","event","getState","type","updateKeyboard","key","data","totalChars","passed","keyUp","keyRealesed","keyedDown","stopPropagation","keyedUp","useEffect","document","body","addEventListener","removeEventListener","currentWord","course","map","index","class","drill","summary","progress","accuracy","style","IconXCircle","IconCheckCircle","hours","minutes","seconds","updateTime","interval","setInterval","clearInterval","appendZero","prop","character","setCharacter","target","toLowerCase","updateChar","toUpperCase","options","i","String","fromCharCode","totalCharacters","currentChar","passCount","failCount","cpm","title","StickyKeys","Shift","Control","Alt","ContextMenu","Backspace","Enter","this","initialState","Map","pressed","repeated","undefined","length","ascii","prototype","charCodeAt","call","set","repeat","isStickyKey","getStickyLabel","isCapsKey","getModifierState","Key","Record","BaseDrill","wordIndex","currentIndex","setCurrentWord","List","transformWord","nextWord","words","count","word","split","withMutations","sound","update","nextCharacterWords","reset","WordDrill","TextDrill","KeyDrill","level","fromJS","require","filterWords","setDrills","keyDrill","wordDrill","textDrill","currentDrill","totalWords","filter","setTotalCharacters","reduce","a","b","nextCharCode","Keyboard","isPrintableKey","updateState","charactersPerMinute","Number","toFixed","Math","max","total","mins","floor","rootReducer","combineReducers","payload","Course","keyPressed","setDefaultCharacter","Summary","store","createStore","applyMiddleware","thunk","Sounds","createRef","missed","canPlay","play","playAudio","current","ref","currentTime","then","done","catch","error","src","stroke","tink","ride","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","StrictMode","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f3c1d0f7.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../css/navbar.css\";\r\nexport default function NavbarComponent() {\r\n    return (\r\n        <div className=\"navbar bordered-top d-flex\">\r\n        <div href=\"\" className=\"navbar-brand\">\r\n            Typing Game\r\n        </div>\r\n      \r\n    </div>\r\n    )\r\n}\r\n\r\n","import React, { Fragment, Component } from \"react\";\nimport {connect} from 'react-redux'\n function Key (props){\n    const render = props.render;\n    console.log(render , \"render\")\n    const getClasses = () => {\n        const classes = [\"keyboard-button\"];\n\n        if (props.extraClass) {\n            classes.push(props.extraClass);\n        }\n\n        const {\n            value,\n            capsOn,\n            sticky,\n            currentKey,\n            shifted,\n            failed\n        } = props;\n        //light the caps lock or the stick keys\n        if ((value === \"caps lock\" && capsOn) || (sticky && value === sticky)) {\n            classes.push(\"is-lighting\");\n        }\n\n        //light the current key\n        if (value === currentKey.char || shifted === currentKey.char) {\n            classes.push(\"is-lighting\");\n        }\n\n        //highlight the wrongly being pressed key\n        if (failed === value || failed === shifted) {\n            classes.push(\"is-error\");\n        }\n        return classes.join(\" \");\n    }\n        return (\n            <div className={getClasses()}>\n                {props.render(props)} \n        </div>\n        );\n    }\n\n\n    const mapStateToProps = ({ keyboard, courses }) => {\n        return {\n            currentKey: courses.get(\"currentKey\"),\n            sticky: keyboard.get(\"sticky\"),\n            capsOn: keyboard.get(\"capsOn\"),\n            failed: courses.get(\"failed\")\n        };\n    };\n    \n    export default connect(mapStateToProps, null)(Key);","import React, { Fragment, Component } from \"react\";\nimport Key from \"./Key\";\nexport default function DoubleCharKey (props) {\n    console.log(props)\n        return (\n            <Key\n                extraClass=\"double-char-key\"\n                shifted={props.shifted}\n                value={props.value}\n                render={state => (\n                    <Fragment>\n                        <span> {props.shifted}</span>\n                        <span className=\"pt-1\"> {props.value}</span>\n                    </Fragment>\n                )}\n            />\n        );\n    \n   \n}\n","import React from \"react\";\n\nexport default function IconArrowLeft () {\n   \n        return (\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                width=\"24\"\n                height=\"24\"\n            >\n                <path d=\"M5.41 11H21a1 1 0 0 1 0 2H5.41l5.3 5.3a1 1 0 0 1-1.42 1.4l-7-7a1 1 0 0 1 0-1.4l7-7a1 1 0 0 1 1.42 1.4L5.4 11z\" />\n            </svg>\n        );\n    \n}\n","import React, { Component, Fragment } from \"react\";\nimport Key from \"./Key\";\nexport default function IconKey (props){\n    const extraClass = props.extraClass\n            ? \"button-has-icon \" + props.extraClass\n            : \"button-has-icon\";\n        return (\n            <Key extraClass={extraClass}\n            value={props.value}\n            render={state => (\n                <Fragment>\n                    <span>{state.value}</span>\n                    {props.icon()}\n                </Fragment>\n            )}\n                />\n        );\n    }\n\n","import React, { Component } from \"react\";\nimport IconArrowLeft from \"../../icons/IconArrowLeft\";\nimport IconKey from \"./IconKey\";\nexport default function BackSpace () {\n   \n        return (\n            <IconKey\n                extraClass=\"backspace\"\n                value=\"backspace\"\n                icon={() => <IconArrowLeft />}\n            />\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport DoubleCharKey from \"./keys/DoubleCharKey\";\nimport BackSpace from \"./keys/BackSpace\";\nexport default function FirstRow () {\n        return (\n            <div className=\"keyboard-row\">\n                <DoubleCharKey value=\"`\" shifted=\"~\" />\n                <DoubleCharKey value=\"1\" shifted=\"!\" />\n                <DoubleCharKey value=\"2\" shifted=\"@\" />\n                <DoubleCharKey value=\"3\" shifted=\"#\" />\n                <DoubleCharKey value=\"4\" shifted=\"$\" />\n                <DoubleCharKey value=\"5\" shifted=\"%\" />\n                <DoubleCharKey value=\"6\" shifted=\"^\" />\n                <DoubleCharKey value=\"7\" shifted=\"&\" />\n                <DoubleCharKey value=\"8\" shifted=\"*\" />\n                <DoubleCharKey value=\"9\" shifted=\"(\" />\n                <DoubleCharKey value=\"0\" shifted=\")\" />\n                <DoubleCharKey value=\"-\" shifted=\"_\" />\n                <DoubleCharKey value=\"+\" shifted=\"=\" />\n                <BackSpace />\n            </div>\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport Key from \"./Key\";\nexport default function LetterKey (props) {\n    console.log(\"letter keys\")\n        return (\n            <Key\n            value={props.value}\n            shifted={props.shifted}\n            extraClass={props.extraClass}\n            render={(props) => {\n                //if caps lock is on and shift is also on , then we show lowercase values\n                if (props.capsOn && props.sticky === \"shift\") {\n                    return props.value;\n                }\n                //if caps is on or we are in shift mode ,we want upper case\n                if (props.capsOn || props.sticky === \"shift\") {\n                    return props.shifted;\n                }\n                return props.value;\n            }}\n            ></Key>\n        );\n    \n}\n","import React from \"react\";\n\nexport default function IconRepeat () {\n        return (\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                width=\"24\"\n                height=\"24\"\n            >\n                <path d=\"M5.41 16H18a2 2 0 0 0 2-2 1 1 0 0 1 2 0 4 4 0 0 1-4 4H5.41l2.3 2.3a1 1 0 0 1-1.42 1.4l-4-4a1 1 0 0 1 0-1.4l4-4a1 1 0 1 1 1.42 1.4L5.4 16zM6 8a2 2 0 0 0-2 2 1 1 0 0 1-2 0 4 4 0 0 1 4-4h12.59l-2.3-2.3a1 1 0 1 1 1.42-1.4l4 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-1.42-1.4L18.6 8H6z\" />\n            </svg>\n        );\n    }\n\n","import React from \"react\";\nimport IconKey from \"./IconKey\";\nimport IconRepeat from \"../../icons/IconRepeat\"\nexport default function TabKey () {\n   \n        return (\n            <IconKey\n                extraClass=\"tab-key\"\n                value=\"tab\"\n                icon={() => <IconRepeat />}\n            />\n        );\n    \n}\n","import React, { Component } from \"react\";\n\nimport DoubleCharKey from \"./keys/DoubleCharKey\";\nimport LetterKey from \"./keys/LetterKey\";\nimport TabKey from \"./keys/TabKey\";\nexport default function SecondRow () {\n        return (\n            <div className=\"keyboard-row\">\n                <TabKey />\n                <LetterKey value=\"q\" shifted=\"Q\" />\n                <LetterKey value=\"w\" shifted=\"W\" />\n                <LetterKey value=\"e\" shifted=\"E\" />\n                <LetterKey value=\"r\" shifted=\"R\" />\n                <LetterKey value=\"t\" shifted=\"T\" />\n                <LetterKey value=\"y\" shifted=\"Y\" />\n                <LetterKey value=\"u\" shifted=\"U\" />\n                <LetterKey value=\"i\" shifted=\"I\" />\n                <LetterKey value=\"o\" shifted=\"O\" />\n                <LetterKey value=\"p\" shifted=\"P\" />\n                <DoubleCharKey value=\"[\" shifted=\"{\" />\n                <DoubleCharKey value=\"]\" shifted=\"}\" />\n                <DoubleCharKey value=\"\\\" shifted=\"|\" />\n            </div>\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport Key from \"./Key\";\nexport default function StickyKey (props) {\n \n        return (\n            <Key \n            value={props.value}\n            extraClass={props.extraClass}\n            render={state => state.value}\n            />\n        );\n    \n}\n","import React from \"react\";\n\nexport default function IconEnter (){\n     return (\n            <svg\n                version=\"1.1\"\n                viewBox=\"0 0 128 128\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g>\n                    <polygon points=\"112.4560547,23.3203125 112.4560547,75.8154297 31.4853516,75.8154297 31.4853516,61.953125     16.0131836,72.6357422 0.5410156,83.3164063 16.0131836,93.9990234 31.4853516,104.6796875 31.4853516,90.8183594     112.4560547,90.8183594 112.4560547,90.8339844 127.4589844,90.8339844 127.4589844,23.3203125   \" />\n                </g>\n            </svg>\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport IconKey from \"./IconKey\";\nimport IconEnter from \"../../icons/IconEnter\"\n\nexport default function EnterKey () {\n        return (\n            <IconKey\n                value=\"enter\"\n                extraClass=\"enter-key\"\n                icon={() => <IconEnter />}\n            />\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport DoubleCharKey from \"./keys/DoubleCharKey\";\nimport LetterKey from \"./keys/LetterKey\";\nimport StickyKey from \"./keys/StickyKey\";\nimport EnterKey from \"./keys/EnterKey\";\n\nexport default  function ThirdRow() {\n        return (\n            <div className=\"keyboard-row\">\n                <StickyKey value=\"caps lock\" extraClass=\"caps-key\" />\n                <LetterKey value=\"a\" shifted=\"A\" />\n                <LetterKey value=\"s\" shifted=\"S\" />\n                <LetterKey value=\"d\" shifted=\"D\" />\n                <LetterKey value=\"f\" shifted=\"F\" />\n                <LetterKey value=\"g\" shifted=\"G\" />\n                <LetterKey value=\"h\" shifted=\"H\" />\n                <LetterKey value=\"j\" shifted=\"J\" />\n                <LetterKey value=\"k\" shifted=\"K\" />\n                <LetterKey value=\"l\" shifted=\"L\" />\n                <DoubleCharKey value=\";\" shifted=\":\" />\n                <DoubleCharKey value=\"'\" shifted=\"&quot;\" />\n                <EnterKey />\n            </div>\n        );\n    \n}\n","import React  from \"react\";\n\nexport default function IconArrowUp() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n      <path d=\"M13 5.41V21a1 1 0 0 1-2 0V5.41l-5.3 5.3a1 1 0 1 1-1.4-1.42l7-7a1 1 0 0 1 1.4 0l7 7a1 1 0 1 1-1.4 1.42L13 5.4z\" />\n    </svg>\n  );\n}\n","import React, { Component } from \"react\";\nimport IconArrowUp from \"../../icons/IconArrowUp\";\nimport IconKey from \"./IconKey\";\nexport default function ShiftKey( ) {\n        return (\n            <IconKey\n                extraClass=\"shift-key\"\n                value=\"shift\"\n                icon={() => <IconArrowUp />}\n            />\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport ShiftKey from \"./keys/ShiftKey\";\nimport LetterKey from \"./keys/LetterKey\";\nimport DoubleCharKey from \"./keys/DoubleCharKey\";\nexport default function FourthRow () {\n        return (\n            <div className=\"keyboard-row\">\n                <ShiftKey />\n                <LetterKey value=\"z\" shifted=\"Z\" />\n                <LetterKey value=\"x\" shifted=\"X\" />\n                <LetterKey value=\"c\" shifted=\"C\" />\n                <LetterKey value=\"v\" shifted=\"V\" />\n                <LetterKey value=\"b\" shifted=\"B\" />\n                <LetterKey value=\"n\" shifted=\"N\" />\n                <LetterKey value=\"m\" shifted=\"M\" />\n                <DoubleCharKey value=\",\" shifted=\"<\" />\n                <DoubleCharKey value=\".\" shifted=\">\" />\n                <DoubleCharKey value=\"?\" shifted=\"/\" />\n                <ShiftKey />\n            </div>\n        );\n}\n","import React, { Component, Fragment } from \"react\";\nimport Key from \"./Key\";\nexport default function SingleCharKey (props) {\n        return (\n            <Key \n            value={props.value}\n            extraClass={props.extraClass}\n            render={state => <Fragment>{state.value}</Fragment>}\n            />\n        );\n    \n}\n","import React from \"react\";\n\nexport default function IconWindows () {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n                <path d=\"M0 93.7l183.6-25.3v177.4H0V93.7zm0 324.6l183.6 25.3V268.4H0v149.9zm203.8 28L448 480V268.4H203.8v177.9zm0-380.6v180.1H448V32L203.8 65.7z\" />\n            </svg>\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport IconKey from \"./IconKey\";\nimport IconWindows from \"../../icons/IconWindows\";\nexport default function WinLogoKey () {\n  \n        return (\n            <IconKey\n                value=\"\"\n                icon={() => <IconWindows />}\n                extraClass=\"win-log-key\"\n            />\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport StickyKey from \"./StickyKey\";\n\nexport default function CtrKey (){\n    \n        return <StickyKey extraClass=\"ctr-key\" value=\"ctrl\" />;\n    \n}\n","import React, { Component } from \"react\";\nimport StickyKey from \"./StickyKey\";\n\nexport default function AltKey () {\n   \n        return <StickyKey extraClass=\"alt-key\" value=\"alt\" />;\n    \n}\n","import React from \"react\";\n\nexport default function IconBars () {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n                <path d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\" />\n            </svg>\n        );\n    }\n\n","import React, { Component } from \"react\";\nimport IconBars from \"../../icons/IconBars\";\nimport IconKey from \"./IconKey\";\nexport default function CommandKey () {\n  \n        return (\n            <IconKey\n                value=\"\"\n                icon={() => <IconBars />}\n                extraClass=\"command-key\"\n            />\n        );\n    \n}\n","import React, { Component } from \"react\";\nimport StickyKey from \"./keys/StickyKey\";\nimport SingleCharKey from \"./keys/SingleCharKey\";\nimport WinLogoKey from \"./keys/WinLogoKey\";\nimport CtrKey from \"./keys/CtrKey\";\nimport AltKey from \"./keys/AltKey\";\nimport CommandKey from \"./keys/CommandKey\";\nexport default function FifthRow () {\n    \n        return (\n            <div className=\"keyboard-row\">\n                <CtrKey />\n                <StickyKey value=\"fn\" extraClass=\"fn-key\" />\n                <WinLogoKey />\n                <AltKey />\n                <SingleCharKey value=\" \" extraClass=\"space-key\" />\n                <AltKey />\n                <CommandKey />\n                <CtrKey />\n            </div>\n        );\n    \n}\n","import React , {useEffect} from 'react'\r\nimport FirstRow from \"./FirstRow\";\r\nimport SecondRow from \"./SecondRow\";\r\nimport ThirdRow from \"./ThirdRow\";\r\nimport FourthRow from \"./FourthRow\";\r\nimport FifthRow from './FifthRow';\r\nimport \"../../css/keyboard.css\"\r\nimport {keyDown , keyUp} from \"../redux/actions/keyboardActions\"\r\nimport {connect} from \"react-redux\"\r\nfunction Keyboard(props) {\r\n   const keyedDown = (e) => {\r\n        props.keyDown(e);\r\n        e.stopPropagation();\r\n    }\r\n    const keyedUp = (e) => {\r\n        props.keyUp(e);\r\n        e.stopPropagation();\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"componet did mount\")\r\n        document.body.addEventListener(\"keydown\", keyedDown);\r\n        document.body.addEventListener(\"keyup\", keyedUp);\r\n        return () => {\r\n            document.body.removeEventListener(\"keydown\", keyedDown);\r\n        document.body.removeEventListener(\"keyup\", keyedUp);\r\n          }\r\n      }, []);\r\n    return (\r\n        <div>\r\n            <div className=\"keyboard\">\r\n                <FirstRow />\r\n                <SecondRow />\r\n                <ThirdRow />\r\n                <FourthRow />\r\n                <FifthRow></FifthRow>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    keyDown: e => dispatch(keyDown(e)),\r\n    keyUp: e => dispatch(keyUp(e))\r\n});\r\nexport default connect(null, mapDispatchToProps)(Keyboard);\r\n","import { coursekeyPressed, resetSound } from \"./courseActions\";\nimport { updateSummary } from \"./summaryActions\";\nconst updateKeyboard = event => ({ type: \"KEY-PRESSED\", event });\n\nconst keyRealesed = event => ({ type: \"KEY-RELEASED\", event });\n\nexport const keyUp = event => {\n    return function(dispatch) {\n        dispatch(keyRealesed(event));\n        dispatch(resetSound());\n    };\n};\n\nexport const keyDown = event => {\n    return function(dispatch, getState) {\n        dispatch(updateKeyboard(event));\n        dispatch(coursekeyPressed(event.key));\n        //update the progress using the course state\n        const courses = getState().courses;\n        const data = {\n            totalChars: courses.get(\"totalCharacters\"),\n            passed: courses.get(\"passCount\"),\n            failed: courses.get(\"failCount\")\n        };\n        dispatch(updateSummary(data));\n    };\n};\n","import { resetSummary } from \"./summaryActions\";\nexport const resetSound = () => ({ type: \"RESET-SOUND\" });\n\nexport const coursekeyPressed = key => ({ type: \"COURSE-KEY-PRESSED\", key });\nconst updateChar = char => ({ type: \"COURSE-SET-CHAR\", char });\nexport const setCharacter = char => {\n    return function(dispatch) {\n        dispatch(updateChar(char));\n        dispatch(resetSummary());\n    };\n};\n","export const updateSummary = data => ({\n    type: \"UPDATE-SUMMARY\",\n    data\n});\nexport const updateTime = data => ({\n    type: \"UPDATE-TIME\",\n    data\n});\n\nexport const resetSummary = () => ({ type: \"RESET-SUMMARY\" });\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nfunction KeyDrillComponent(props) {\n const  makeChar = (key, index) => {\n    const className = \"keyboard-button selected-key \" + key.class;\n    return (\n        <div className={className} key={index}>\n            {key.char}\n        </div>\n    );\n}\n    return (\n        <div className=\"p-2 typed-words d-flex jcc\">\n        {props.currentWord.map(makeChar)}\n    </div>\n    )\n}\nconst mapStateToProps = ({ keyboard, courses }) => {\n    return {\n        currentWord: courses.get(\"currentWord\"),\n        course: courses.get(\"course\")\n    };\n};\n\nexport default connect(mapStateToProps)( KeyDrillComponent);\n\n\n","import React, { Component } from \"react\";\nimport KeyDrillComponent from \"./KeyDrillComponent\";\nimport \"../../css/course.css\"\nimport {connect} from \"react-redux\"\nfunction TypingComponent (props)  {\n    const drill = props.drill\n    return (\n        drill == \"key\" ?<> <KeyDrillComponent /> </> : <></>\n    )\n           \n}\nconst mapStateToProps = ({ courses }) => {\n    return {\n        drill: courses.get(\"drill\")\n    };\n};\n\nexport default connect(mapStateToProps, null)(TypingComponent);\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport \"../css/dashboard.css\"\r\n function Dashboard(props) {\r\n   return(\r\n   <div className=\"dashboard d-flex bordered-left bordered-right\">\r\n   {/*      progress*/}\r\n   <div className=\"progress flex-unit-2 mr-2 shadow\">\r\n       <div\r\n           className=\"progress-bar\"\r\n           style={{ width: props.progress + \"%\" }}\r\n       >\r\n           {props.progress} % complete\r\n       </div>\r\n   </div>\r\n   <div className=\"progress flex-unit-1 mr-2 progress-danger shadow \">\r\n       <div\r\n           className=\"progress-bar\"\r\n           style={{ width:props.accuracy + \"%\" }}\r\n       >\r\n           Accurancy:{props.accuracy} %\r\n       </div>\r\n   </div>\r\n</div>\r\n )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ summary }) => ({\r\n    progress: summary.get(\"progress\"),\r\n    accuracy: summary.get(\"accuracy\")\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from \"react\";\n\nexport default function IconXCircle () {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                <path d=\"M4.93 19.07A10 10 0 1 1 19.07 4.93 10 10 0 0 1 4.93 19.07zm1.41-1.41A8 8 0 1 0 17.66 6.34 8 8 0 0 0 6.34 17.66zM13.41 12l1.42 1.41a1 1 0 1 1-1.42 1.42L12 13.4l-1.41 1.42a1 1 0 1 1-1.42-1.42L10.6 12l-1.42-1.41a1 1 0 1 1 1.42-1.42L12 10.6l1.41-1.42a1 1 0 1 1 1.42 1.42L13.4 12z\" />\n            </svg>\n        );\n    }\n\n","import React from \"react\";\n\nexport default function IconCheckCircle () {\n        return (\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                width=\"24\"\n                height=\"24\"\n            >\n                <path d=\"M12 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-2.3-8.7l1.3 1.29 3.3-3.3a1 1 0 0 1 1.4 1.42l-4 4a1 1 0 0 1-1.4 0l-2-2a1 1 0 0 1 1.4-1.42z\" />\n            </svg>\n        );\n    }\n\n","import React , {useEffect} from 'react'\r\nimport \"../css/time.css\"\r\nimport {connect} from \"react-redux\"\r\nimport {updateTime} from \"./redux/actions/summaryActions\"\r\nfunction Timer(props) {\r\n    useEffect(() => {\r\n       let interval = setInterval(() => {\r\n            let { hours, minutes, seconds } = props;\r\n            ++seconds;\r\n            if (seconds > 60) {\r\n                seconds = 0;\r\n                ++minutes;\r\n            }\r\n            if (minutes > 60) {\r\n                minutes = 0;\r\n                ++hours;\r\n            }\r\n\r\n        props.updateTime({ hours, minutes, seconds });\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(interval);\r\n          }\r\n    }, [])\r\n   \r\n  \r\n   const appendZero = (prop) => {\r\n        return prop > 10 ? prop : \"0\" + prop;\r\n    }\r\n    return (\r\n        <div>\r\n              <div className=\"time d-flex jcsb  aic p-2\">\r\n                <div className=\"d-flex aic\">\r\n                    HH:<span className=\"text-lg\">\r\n                    {appendZero(props.hours)}\r\n                    </span>\r\n                </div>\r\n                <div className=\"d-flex aic\">\r\n                    MM:{\" \"}\r\n                    <span className=\"text-lg\">\r\n                        {appendZero(props.minutes)}\r\n                    </span>\r\n                </div>\r\n                <div className=\"d-flex aic\">\r\n                    SS :<span className=\"text-lg\">\r\n                        {appendZero(props.seconds)}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = ({ summary }) => ({\r\n    hours: summary.get(\"hours\"),\r\n    minutes: summary.get(\"minutes\"),\r\n    seconds: summary.get(\"seconds\")\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateTime: data => dispatch(updateTime(data))\r\n    \r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n","import React from 'react'\r\nimport { setCharacter } from \"./redux/actions/courseActions\"\r\nimport {connect} from \"react-redux\"\r\nfunction CharacterSelector(props) {\r\n\r\n    const options = () => {\r\n        const options = [];\r\n        //generate letters frin a to z using ascii\r\n        for (let i = 65; i <= 90; i++) {\r\n            const char = String.fromCharCode(i);\r\n            options.push(\r\n                <option key={i} value={char}>\r\n                    Character {char}\r\n                </option>\r\n            );\r\n        }\r\n        return options;\r\n    }\r\n    return (\r\n        <div>\r\n        <select\r\n            className=\"control shadow\"\r\n            value={props.character.toUpperCase()}\r\n           \r\n        >\r\n            {options()}\r\n        </select>\r\n    </div>\r\n    )\r\n}\r\nconst mapStateToProps = ({ courses }) => ({\r\n    character: courses.get(\"currentChar\")\r\n});\r\n\r\nconst mapActionsToProps = dispatch => ({\r\n    setCharacter: event =>\r\n        dispatch(setCharacter(event.target.value.toLowerCase()))\r\n});\r\nexport default connect(mapStateToProps, mapActionsToProps)(CharacterSelector);\r\n\r\n","import React from 'react'\r\nimport IconXCircle from './icons/IconXCircle'\r\nimport IconCheckCircle from \"./icons/IconCheckCircle\"\r\nimport \"../css/summary.css\"\r\nimport  Timer from \"./Timer\"\r\nimport CharacterSelector from './CharacterSelector'\r\nimport {connect} from \"react-redux\"\r\nfunction Summary(props) {\r\n    console.log(props)\r\n    return (\r\n        <div className=\"summary shadow \">\r\n            <Timer />\r\n            <div className=\"header\">\r\n                <div className=\"currentChar shadow\">\r\n                    <h6>{props.currentChar.toUpperCase()}</h6>\r\n                </div>\r\n            </div>\r\n            <CharacterSelector  />\r\n            <div className=\"highlights\">\r\n                <i className=\"fill-primary\">\r\n                    <IconCheckCircle />\r\n                </i>\r\n                <span className=\"text-lg\" title=\"Pass count\">\r\n                    {props.passCount}\r\n                </span>\r\n                <i className=\"fill-danger\">\r\n                    <IconXCircle />\r\n                </i>\r\n                <span className=\"text-lg\" title=\"Fail Count\">\r\n                    {props.failCount}\r\n                </span>\r\n            </div>\r\n            <div\r\n                className=\" shadow  d-flex jcsb aic p-2\"\r\n                title=\"Characters per minute\"\r\n            >\r\n                <span title=\"Characters per minute\" className=\"text-md\">\r\n                    Cpm\r\n                </span>\r\n                <span className=\"text-lg\"> {props.cpm}</span>\r\n            </div>\r\n            <div className=\"d-flex jcfe aic p-2\">\r\n                <strong className=\"text-md\">\r\n                    {props.passCount}/{props.totalCharacters}\r\n                </strong>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToprops = ({ courses, summary }) => ({\r\n    totalCharacters: courses.get(\"totalCharacters\"),\r\n    currentChar: courses.get(\"currentChar\"),\r\n    passCount: courses.get(\"passCount\"),\r\n    failCount: courses.get(\"failCount\"),\r\n    cpm: summary.get(\"cpm\")\r\n});\r\n\r\nexport default connect(mapStateToprops, null)(Summary);\r\n\r\n","import { Map } from \"immutable\";\n\nconst StickyKeys = {\n    Shift: \"shift\",\n    Control: \"ctrl\",\n    Alt: \"alt\",\n    ContextMenu: \"\",\n    Backspace: \"backspace\",\n    Enter: \"enter\"\n};\n\nclass Keyboard {\n    /**\n     * creates an instance of a keyboard class\n     * @return {Keyboard}\n     */\n    constructor() {\n        this.initialState = Map({\n            sticky: null,\n            pressed: null,\n            capsOn: null,\n            event: null,\n            repeated: false\n        });\n    }\n    /**\n     * gets the sticky key's label based on KeyboardEvent.key\n     * @param  {String} key\n     * @return {String|undefined}\n     */\n    getStickyLabel(key) {\n        return StickyKeys[key];\n    }\n    isPrintableKey(key) {\n        if (key === undefined || key.length > 1 || key === null) return false;\n        const ascii = String.prototype.charCodeAt.call(key, 0);\n        //anything between 32 and 126 is printable in the ascii table\n\n        //32<code<126\n        return 32 <= ascii && ascii <= 126;\n    }\n    isCapsKey(key) {\n        return key === \"CapsLock\";\n    }\n    isStickyKey(key) {\n        return key in StickyKeys;\n    }\n\n    keyedDown(state, event) {\n        const key = event.key;\n\n        state = state.set(\"repeated\", event.repeat);\n        if (this.isStickyKey(key)) {\n            return state.set(\"sticky\", this.getStickyLabel(key));\n        }\n\n        //mark the caps locks state\n        if (this.isCapsKey(key)) {\n            return state.set(\"capsOn\", !event.getModifierState(\"CapsLock\"));\n        }\n\n        return state;\n    }\n    //listen for key ups especially for stick buttons\n    keyedUp(state, event) {\n        return state.set(\"sticky\", null);\n    }\n}\n\nexport default new Keyboard();\n","import { Record, List } from \"immutable\";\n\nconst Key = Record({ char: \"\", class: \"\" });\n\nexport default class BaseDrill {\n    constructor(course) {\n        this.course = course;\n        this.wordIndex = 0;\n        this.currentIndex = 0;\n        this.setCurrentWord();\n    }\n\n    /**\n     * resets the class to tis initial values\n     * @return {undefined}\n     */\n    reset() {\n        this.currentIndex = 0;\n        this.wordIndex = 0;\n        this.setCurrentWord();\n    }\n    /**\n     * sets the word to be typed\n     */\n    setCurrentWord() {\n        this.currentWord = List(this.transformWord(this.nextWord()));\n    }\n    /**\n     * gets the next word\n     * @return {String }\n     */\n    nextWord() {\n        if (this.wordIndex < this.course.words.count()) {\n            return this.course.words.get(++this.wordIndex);\n        }\n        return \"THE END\";\n    }\n    /**\n     * Splits a word into an array of its characters\n     * @param  {String} word\n     * @return {Array}\n     */\n    transformWord(word) {\n        return word.split(\"\").map(char => new Key({ char }));\n    }\n\n    /**\n     * gets the current key\n     * @return {String}\n     */\n    get currentKey() {\n        return this.currentWord.get(this.currentIndex);\n    }\n    /**\n     * updates the state based on they that was pressed\n     * @param  {Immutable.Map} state\n     * @param  {String} key\n     * @return {Immutable.Map}\n     */\n    updateState(state, key) {\n        const passed = key === this.currentKey.char;\n\n        return state.withMutations(state => {\n            //set the appropriate sound\n            const sound = passed ? \"passed\" : \"missed\";\n            state.set(\"sound\", sound);\n            //set the appropriate class\n            const className = passed ? \"key-passed\" : \"key-failed\";\n            state.update(\"currentWord\", word =>\n                word.update(this.currentIndex, key =>\n                    key.set(\"class\", className)\n                )\n            );\n            if (!passed) {\n                state.set(\"failed\", key).update(\"failCount\", count => ++count);\n                //if missed ,the current index  and words do not change\n                return;\n            }\n            state.set(\"failed\", null).update(\"passCount\", count => ++count);\n\n            //if we are running out of words in the current character selection,\n            //its time to select a new character set\n            if (this.course.words.count() === this.wordIndex + 1) {\n                this.course.nextCharacterWords();\n                this.reset();\n            }\n            //if we are on the last character of the current word\n            //time to pop in a new word\n            if (this.currentWord.count() === this.currentIndex + 1) {\n                // time to bring another set of characters\n                this.currentIndex = 0;\n                this.setCurrentWord();\n                state\n                    .set(\"currentChar\", this.course.currentChar)\n                    .set(\"currentWord\", this.currentWord)\n                    .set(\"totalWords\", this.course.words.count())\n                    .set(\"currentKey\", this.currentKey);\n                return;\n            }\n            //time to relax, increment the index and move on\n            ++this.currentIndex;\n            state.set(\"currentKey\", this.currentKey);\n        });\n    }\n}\n","import BaseDrill from \"./BaseDrill\";\n\nclass WordDrill extends BaseDrill {}\n\nexport default WordDrill;\n","import BaseDrill from \"./BaseDrill\";\n\nclass TextDrill extends BaseDrill {}\n\nexport default TextDrill;\n","import BaseDrill from \"./BaseDrill\";\n\nclass KeyDrill extends BaseDrill {}\n\nexport default KeyDrill;\n","import { Map, List, fromJS } from \"immutable\";\nimport Keyboard from \"./Keyboard\"\nimport WordDrill from \"./WordDrill\";\nimport TextDrill from \"./TextDrill\";\nimport KeyDrill from \"./KeyDrill\";\nclass Course {\n    /**\n     * creates an instance of  Course class\n     * @return {Course}\n     */\n    constructor() {\n        this.currentChar = \"a\";\n        this.totalCharacters = 0;\n        this.drill = \"key\";\n        this.level = \"junior\";\n        this.data = List(fromJS(require(\"./data.json\")));\n        this.filterWords(this.currentChar);\n        this.setDrills();\n    }\n    /**\n     * sets all the kinds of drills\n     */\n    setDrills() {\n        this.keyDrill = new KeyDrill(this);\n        this.wordDrill = new WordDrill(this);\n        this.textDrill = new TextDrill(this);\n    }\n    /**\n     * gets the current selected drill\n     * @return {BaseDrill}\n     */\n    get currentDrill() {\n        return this[this.drill + \"Drill\"];\n    }\n    /**\n     * gets the initial state\n     * @return {Immutable.Map}\n     */\n    get initialState() {\n        return Map({\n            currentWord: this.currentDrill.currentWord,\n            drill: this.drill,\n            sound: null,\n            currentKey: this.currentDrill.currentKey,\n            passCount: 0,\n            failCount: 0,\n            totalCharacters: this.totalCharacters,\n            failed: null,\n            totalWords: this.words.count(),\n            currentChar: this.currentChar\n        });\n    }\n\n    /**\n     * filters the words of based on a given nextCharacterWords\n     * @param {String} char\n     */\n    filterWords(char) {\n        //reshuffle the words so they dont follow any specified order\n        this.words = this.data.filter(word => word[0] === char);\n        this.setTotalCharacters();\n    }\n    /**\n     * sets the total number of characters in the list of selected words\n     */\n    setTotalCharacters() {\n        this.totalCharacters = this.words.reduce((a, b) => a + b.length, 0);\n    }\n    /**\n     *sets the words of the next character from the currently selected one\n     */\n    nextCharacterWords() {\n        // get the next character\n        // a=97 and z=122\n        let nextCharCode = this.currentChar.charCodeAt(0);\n        nextCharCode === 122 ? (nextCharCode = 97) : ++nextCharCode;\n        this.currentChar = String.fromCharCode(nextCharCode);\n        this.filterWords(this.currentChar);\n    }\n    /**\n     * react to  a pressed key\n     * @param  {Immutable.Map} state\n     * @param  {String} key\n     * @return {Immutable.Map}\n     */\n    keyPressed(state, key) {\n        //only handle printable keys\n        if (!Keyboard.isPrintableKey(key)) {\n            return state;\n        }\n        return this.currentDrill.updateState(state, key);\n    }\n    /**\n     * sets the character\n     * @param {Immutable.Map} state\n     * @param {String} char\n     */\n    setDefaultCharacter(state, char) {\n        this.currentChar = char;\n        this.filterWords(char);\n        this.currentDrill.reset();\n        return this.initialState;\n    }\n}\n//ensure we exporting the same instance over every import\nexport default new Course();\n","import { Map } from \"immutable\";\nclass Summary {\n    /**\n     * Creates an instance of the Summary Class\n     * @return {Summary}\n     */\n    constructor() {\n        this.initialState = Map({\n            progress: 0,\n            accuracy: 100,\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n            //characters per minute\n            cpm: 0\n        });\n    }\n    /**\n     * updates the given state\n     * @param  {Immutable.Map} state\n     * @param  {Number} options.passed\n     * @param  {Number} options.failed\n     * @param  {Number} options.totalChars\n     * @return {immutable.Map}\n     */\n    updateState(state, { passed, failed, totalChars }) {\n        if (totalChars === 0) return state;\n        const cpm = this.charactersPerMinute(state, passed, failed);\n        const progress = Number(passed / totalChars * 100).toFixed(1);\n        const accuracy = Number(\n            (totalChars - failed) / totalChars * 100\n        ).toFixed(2);\n        return state\n            .set(\"progress\", progress)\n            .set(\"accuracy\", Math.max(0, accuracy))\n            .set(\"cpm\", cpm);\n    }\n    /**\n     * updates the current time\n     * @param  {immutable.Map} state\n     * @param  {Number} options.hours\n     * @param  {Number} options.minutes\n     * @param  {Number} options.seconds\n     * @return {Number}\n     */\n    updateTime(state, { hours, minutes, seconds }) {\n        return state\n            .set(\"hours\", hours)\n            .set(\"minutes\", minutes)\n            .set(\"seconds\", seconds);\n    }\n    /**\n     * calculates the characters per minute\n     * @param  {immutable.State} state\n     * @param  {Number} passed\n     * @param  {Number} failed\n     * @return {Number}\n     */\n    charactersPerMinute(state, passed, failed) {\n        const total = passed + failed;\n        const mins = (state.get(\"minutes\") + state.get(\"seconds\") * 60) / 60;\n        return Math.floor(mins > 0 ? total / mins : 0);\n    }\n}\n// export the same instance on every import\nexport default new Summary();\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n\r\nimport keyboardReducer from \"./reducers/keyboardReducer\";\r\nimport CoursesReducer from \"./reducers/CoursesReducer\";\r\nimport summaryReducer from \"./reducers/summaryReducer\";\r\nconst rootReducer =  combineReducers({\r\n        keyboard: keyboardReducer,\r\n        courses: CoursesReducer,\r\n        summary: summaryReducer\r\n    })\r\n\r\nexport default rootReducer\r\n","\nimport Keyboard from \"../../../courses/Keyboard\";\nexport default function(state = Keyboard.initialState, payload) {\n    switch (payload.type) {\n        case \"KEY-PRESSED\":\n            return Keyboard.keyedDown(state, payload.event);\n        case \"KEY-RELEASED\":\n            return Keyboard.keyedUp(state, payload.event);\n        default:\n            return state;\n    }\n}\n","import Course from \"../../../courses/Course\"\n\nexport default function(state = Course.initialState, payload) {\n    switch (payload.type) {\n        case \"COURSE-KEY-PRESSED\":\n            return Course.keyPressed(state, payload.key);\n        case \"RESET-SOUND\":\n            return state.set(\"sound\", null);\n        case \"COURSE-SET-CHAR\":\n            return Course.setDefaultCharacter(state, payload.char);\n\n        default:\n            return state;\n    }\n}\n","import Summary from \"../../../courses/Summary\"\nexport default function(state = Summary.initialState, payload) {\n    switch (payload.type) {\n        case \"UPDATE-SUMMARY\":\n            return Summary.updateState(state, payload.data);\n        case \"UPDATE-TIME\":\n            return Summary.updateTime(state, payload.data);\n\n        case \"RESET-SUMMARY\":\n            return Summary.initialState;\n        default:\n            return state;\n    }\n}\n","import {applyMiddleware, createStore } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./Component/redux/rootReducer\"\r\nconsole.log(\"Hello\")\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\n// console.log(store);\r\nexport default store;","export default __webpack_public_path__ + \"static/media/keyStroke.0d60cfd6.wav\";","export default __webpack_public_path__ + \"static/media/tink.b78647d2.wav\";","export default __webpack_public_path__ + \"static/media/ride.44e63854.wav\";","import React, { Component, createRef } from \"react\";\n\nimport stroke from \"./keyStroke.wav\";\nimport tink from \"./tink.wav\";\nimport ride from \"./ride.wav\";\nimport { connect } from \"react-redux\";\n\nclass Sounds extends Component {\n    constructor(props) {\n        super(props);\n        this.passed = createRef();\n        this.missed = createRef();\n        this.sticky = createRef();\n        this.canPlay = true;\n    }\n    componentWillUpdate({ sound, capsOn, sticky }) {\n        if (sound) {\n            this.play(sound);\n        }\n        if (capsOn || sticky) {\n            this.play(\"sticky\");\n        }\n    }\n    play(sound) {\n        this.playAudio(this[sound].current);\n    }\n\n    playAudio(ref) {\n        if (!this.canPlay) return;\n\n        if (ref.currentTime > 0) {\n            ref.currentTime = 0;\n        }\n\n        ref\n            .play()\n            .then(done => (this.canPlay = true))\n            .catch(error => (this.canPlay = true));\n    }\n    render() {\n        return (\n            <template>\n                <audio src={stroke} ref={this.passed} />\n                <audio src={tink} ref={this.sticky} />\n                <audio src={ride} ref={this.missed} />\n            </template>\n        );\n    }\n}\n\nconst mapStateToProps = ({ courses, keyboard }) => ({\n    sound: courses.get(\"sound\"),\n    sticky: keyboard.get(\"sticky\"),\n    capsOn: keyboard.get(\"capsOn\")\n});\n\nexport default connect(mapStateToProps, null)(Sounds);\n","import React, { Component } from \"react\";\nimport \"./App.css\"\nimport NavbarComponent from \"./Component/NavbarComponent\"\nimport Keyboard from \"./Component/keyboard/KeyboardComonent\";\nimport TypingComponent from \"./Component/TypingComponent/TypingComponent\";\nimport Dashboard from \"./Component/Dashboard\";\nimport Summary from \"./Component/SummaryComponent\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Sounds from \"./sounds/Sounds\";\nfunction App () {\n   \n        return (\n            <Provider store={store}>\n                  <div className=\"container d-flex\">\n           <Sounds></Sounds>\n           <div className=\"flex-8 jcc \">\n               <NavbarComponent />\n               <div className=\"bg-white flex-8\">\n                   <TypingComponent></TypingComponent>\n                   <Dashboard></Dashboard>\n                   <Keyboard></Keyboard>\n               </div>\n             \n           </div>\n           <div className=\"flex-4\">\n                       <Summary ></Summary>\n                   </div>\n       </div>\n            </Provider>\n          \n            \n        );\n    }\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from \"./registerServiceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nregisterServiceWorker();\n"],"sourceRoot":""}